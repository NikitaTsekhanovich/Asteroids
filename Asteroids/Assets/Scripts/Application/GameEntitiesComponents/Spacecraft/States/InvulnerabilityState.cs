using Application.Configs;
using Domain.Properties;
using UnityEngine;

namespace Application.GameEntitiesComponents.Spacecraft.States
{
    public class InvulnerabilityState : IState, ICanUpdate
    {
        private readonly float _timeInvulnerability;
        private readonly ParticleSystem _invulnerabilityEffect;
        private readonly SpacecraftStateMachine _spacecraftStateMachine;

        private float _currentTimeInvulnerability;

        public InvulnerabilityState(
            SpacecraftConfig spacecraftConfig,
            ParticleSystem invulnerabilityEffect,
            SpacecraftStateMachine spacecraftStateMachine)
        {
            _timeInvulnerability = spacecraftConfig.TimeInvulnerability;
            _invulnerabilityEffect = invulnerabilityEffect;
            _spacecraftStateMachine = spacecraftStateMachine;
        }
        
        public void Enter()
        {
            _invulnerabilityEffect.Play();
        }

        public void Exit()
        {
            
        }

        public void UpdateSystem()
        {
            WaitInvulnerability();
        }
        
        private void WaitInvulnerability()
        {
            _currentTimeInvulnerability += Time.deltaTime;

            if (_currentTimeInvulnerability >= _timeInvulnerability)
            {
                _currentTimeInvulnerability = 0f;
                _spacecraftStateMachine.EnterIn<MoveState>();
            }
        }
    }
}
